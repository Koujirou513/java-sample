version: '3.8'

services:
  # PostgreSQLデータベース
  postgres:
    image: postgres:15-alpine
    container_name: postgres-db
    environment:
      POSTGRES_DB: myapp
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      TZ: Asia/Tokyo
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Spring Bootアプリケーション
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: spring-app
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - TZ=Asia/Tokyo
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network
    restart: unless-stopped
    volumes:
      # 開発時のホットリロード用（必要に応じて）
      - ./logs:/app/logs

  # 開発時用のadminer（データベース管理ツール）
  adminer:
    image: adminer:4-standalone
    container_name: adminer
    ports:
      - "8081:8080"
    networks:
      - app-network
    restart: unless-stopped
    depends_on:
      - postgres

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge